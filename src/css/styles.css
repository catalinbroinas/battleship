/* Fonts */
@font-face {
  font-family: "Roboto";
  src: url("./../fonts/Roboto/Roboto-Black.ttf") format("truetype");
  font-weight: 900;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "Roboto";
  src: url("./../fonts/Roboto/Roboto-Bold.ttf") format("truetype");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "Roboto";
  src: url("./../fonts/Roboto/Roboto-Medium.ttf") format("truetype");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "Open Sans";
  src: url("./../fonts/Open_Sans/OpenSans-SemiBold.ttf") format("truetype");
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "Open Sans";
  src: url("./../fonts/Open_Sans/OpenSans-Medium.ttf") format("truetype");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "Open Sans";
  src: url("./../fonts/Open_Sans/OpenSans-Regular.ttf") format("truetype");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "Open Sans";
  src: url("./../fonts/Open_Sans/OpenSans-Light.ttf") format("truetype");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}

/* Body */
body {
  font-family: "Roboto", Arial, Verdana, Helvetica, sans-serif;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

ul,
li,
h1,
h2,
h3,
h4,
h5,
h6,
p {
  margin: 0;
  padding: 0;
}

ul {
  list-style-type: none;
}

* {
  box-sizing: border-box;
}

/* Layout */
.container-fluid {
  max-width: 100vw;
  min-height: 100vh;
  background-color: #eceff1;
  display: flex;
  justify-content: center;
  align-items: center;
}

.container {
  width: min(1320px, 100%);
}

.form-wrapper,
.endGame-wrapper {
  position: relative;
  margin: auto;
  background-color: #263238;
  border-radius: 1rem;
  padding: 3rem;
  width: min(500px, 100%);
  display: flex;
  flex-flow: column wrap;
  gap: 2rem;
  box-shadow: 0 0 30px 0.0625rem rgba(0, 0, 0, 0.3019607843);
  z-index: 2;
}

.gameboard-wrapper {
  position: relative;
  display: flex;
  justify-content: space-around;
  align-items: center;
  gap: 3rem;
  z-index: 2;
}

.setup-wrapper {
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 2rem;
  z-index: 2;
}

.row-button {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 2rem;
}

/* Typography */
.title,
.sub-title {
  color: #fff;
  text-align: center;
  font-family: Arial, Helvetica, sans-serif;
  font-weight: 700;
}

.title {
  text-transform: uppercase;
  font-size: 2.5rem;
}

.sub-title {
  font-size: 2rem;
  margin-bottom: 1rem;
}
.sub-title::first-letter {
  text-transform: capitalize;
}

.sub-title.player {
  color: #c8e6c9;
}
.sub-title.computer {
  color: #fff9c4;
}

.text-info {
  color: #607d8b;
  font-family: "Roboto", Arial, Helvetica, sans-serif;
  font-weight: 400;
  font-size: 1rem;
  text-align: left;
  margin: 0;
  padding: 0;
}

/* Spacing */
.me-1 {
  margin-right: 0.25rem;
}
.me-2 {
  margin-right: 0.5rem;
}

/* Form */
.form-row {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  position: relative;
  padding: 1rem 0 0;
  width: 100%;
}

.form-control {
  font-family: inherit;
  width: 100%;
  border: 0;
  border-bottom: 2px solid #607d8b;
  outline: 0;
  font-size: 1.3rem;
  color: #fff;
  padding: 0.5rem;
  background: transparent;
  transition: border-color 0.3s;
}

.form-control::placeholder {
  color: transparent;
}

.form-control:placeholder-shown ~ .form-label {
  font-size: 1.3rem;
  cursor: text;
  top: 1.5rem;
  left: 0.5rem;
}

.form-label {
  position: absolute;
  top: 0;
  display: block;
  transition: 0.3s;
  font-size: 1rem;
  color: #607d8b;
}

.form-control:placeholder-shown {
  border: 0;
  border-bottom: 2px solid #607d8b;
}

.form-control:focus,
.form-control:focus:placeholder-shown {
  border-width: 3px;
  border-image: linear-gradient(to right, #607d8b, #fff);
  border-image-slice: 1;
}

.btn-submit,
.btn-playAgain,
.btn-reset {
  display: inline-flex;
  border: none;
  padding: 10px 20px;
  font-size: 16px;
  font-weight: bold;
  border-radius: 5px;
  cursor: pointer;
  margin: 0 auto;
  background-color: #607d8b;
  color: #fff;
  transition: background-color 0.3s, color 0.3s, box-shadow 0.3s;
}

.btn-reset {
  background-color: #fff;
  color: #607d8b;
}

.btn-submit:hover,
.btn-playAgain:hover,
.btn-submit:active,
.btn-playAgain {
  background-color: #546e7a;
  color: #fff;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
}

.btn-reset:hover,
.btn-reset:active {
  background-color: white;
  color: #546e7a;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
}

/* Gameboard */
.gameboard {
  position: relative;
  background-color: #263238;
  padding: 2rem;
  display: flex;
  flex-direction: column;
  box-shadow: 0 0 30px 0.0625rem rgba(0, 0, 0, 0.3019607843);
  z-index: 3;
}

.gameboard .row {
  display: flex;
}

.cell {
  position: relative;
  width: 3rem;
  height: 3rem;
  background-color: transparent;
  border: 1px solid #8198a3;
}

.gameboard-player .cell {
  background-color: rgba(200, 230, 201, 0.2);
}
.gameboard-player .cell.attacked {
  background-color: transparent;
}

.gameboard-player .cell.ship {
  background-color: #607d8b;
}

.gameboard-computer .cell {
  background-color: rgba(255, 249, 196, 0.25);
  cursor: crosshair;
}
.gameboard-computer .cell.attacked {
  cursor: default;
  background-color: transparent;
}

.cell.attacked::after,
.cell.ship.attacked::after {
  position: absolute;
  content: "";
  border-radius: 50%;
  width: 1rem;
  height: 1rem;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.cell.attacked::after {
  background-color: #0288d1;
}

.cell.ship.attacked {
  background-color: #607d8b;
  border: none;
}
.cell.ship.attacked::after {
  background-color: #ae1919;
}

/* Animation */
.btn {
  position: relative;
  overflow: hidden;
}

.btn span {
  position: absolute;
  border-radius: 50%;
  background-color: rgba(255, 255, 255, 0.8);
  width: 100px;
  height: 100px;
  margin-top: -50px;
  margin-left: -50px;
  transform: translate(-50%, -50%);
  animation: ripple 1s;
  opacity: 0;
}

/* Add animation */
@keyframes ripple {
  from {
    opacity: 1;
    transform: scale(0);
  }

  to {
    opacity: 0;
    transform: scale(10);
  }
}

@media only screen and (max-width: 1356px) {
  .cell {
    width: 2rem;
    height: 2rem;
  }
}

@media only screen and (max-width: 991px) {
  .gameboard-wrapper {
    flex-wrap: wrap;
  }
}
